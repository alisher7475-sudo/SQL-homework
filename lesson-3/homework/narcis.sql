# SQL Easy level tasks (10)


–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ BULK INSERT

BULK INSERT –≤ SQL Server ‚Äî —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö (bulk data) –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, .txt –∏–ª–∏ .csv) –≤ —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
üëâ –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–º–ø–æ—Ä—Ç–∞ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø–æ—Å—Ç—Ä–æ—á–Ω—ã–º–∏ INSERT.

–ü—Ä–∏–º–µ—Ä:
–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ BULK INSERT

BULK INSERT –≤ SQL Server ‚Äî —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö (bulk data) –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, .txt –∏–ª–∏ .csv) –≤ —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
üëâ –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–º–ø–æ—Ä—Ç–∞ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø–æ—Å—Ç—Ä–æ—á–Ω—ã–º–∏ INSERT.

2. –ß–µ—Ç—ã—Ä–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ SQL Server

CSV (Comma Separated Values)

TXT (Text files)

XLS/XLSX (Excel)

XML (Extensible Markup Language)

(–¢–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è JSON, –Ω–æ —á–∞—â–µ —á–µ—Ä–µ–∑ OPENROWSET –∏–ª–∏ SSIS.)

3. CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(50),
    Price DECIMAL(10,2)
);
4. INSERT INTO Products (ProductID, ProductName, Price)
VALUES
(1, 'Laptop', 1200.00),
(2, 'Smartphone', 800.00),
(3, 'Headphones', 150.00);

5. –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É NULL –∏ NOT NULL

NULL = –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è (–ø—É—Å—Ç–æ–µ –ø–æ–ª–µ, –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ).

NOT NULL = –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ.

–ü—Ä–∏–º–µ—Ä:
UserName VARCHAR(50) NOT NULL,  -- –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
Email VARCHAR(100) NULL         -- –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º
  
6. –î–æ–±–∞–≤–∏—Ç—å UNIQUE –Ω–∞ ProductName
ALTER TABLE Products
ADD CONSTRAINT UQ_ProductName UNIQUE (ProductName);

7. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ SQL-–∑–∞–ø—Ä–æ—Å–µ
-- –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Products
SELECT * FROM Products;

8. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É CategoryID
ALTER TABLE Products
ADD CategoryID INT;

9. –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É Categories
CREATE TABLE Categories (
    CategoryID INT PRIMARY KEY,
    CategoryName VARCHAR(50) UNIQUE
);

0. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ IDENTITY –≤ SQL Server

IDENTITY ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–∞, –∫–æ—Ç–æ—Ä–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫.

–ù–∞—á–∏–Ω–∞–µ—Ç —Å –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ (seed)

–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —à–∞–≥ (increment)

–ü—Ä–∏–º–µ—Ä:
CREATE TABLE Orders (
    OrderID INT IDENTITY(1,1) PRIMARY KEY,  -- –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1, —à–∞–≥ = 1
    OrderDate DATETIME DEFAULT GETDATE()
);


# SQL Medium level tasks (10)


-- –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ —Ç–∞–±–ª–∏—Ü—É Products
BULK INSERT Products
FROM 'C:\Data\products.txt'
WITH (
    FIELDTERMINATOR = ',',   -- —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∑–Ω–∞—á–µ–Ω–∏–π
    ROWTERMINATOR = '\n',    -- —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å—Ç—Ä–æ–∫
    FIRSTROW = 2             -- –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
);

ALTER TABLE Products
ADD CONSTRAINT FK_Products_Categories
FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID);


–†–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É PRIMARY KEY –∏ UNIQUE KEY
–°–≤–æ–π—Å—Ç–≤–æ	PRIMARY KEY	UNIQUE KEY
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —Ç–∞–±–ª–∏—Ü–µ	–¢–æ–ª—å–∫–æ 1	–ú–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ
NULL –∑–Ω–∞—á–µ–Ω–∏—è	–ù–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è	–†–∞–∑—Ä–µ—à–µ–Ω–æ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ NULL
–ò–Ω–¥–µ–∫—Å	–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞—Å—Ç–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)	–°–æ–∑–¥–∞—ë—Ç –Ω–µ–∫–ª–∞—Å—Ç–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ	–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–æ–∫–∏	–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±—Ü–µ


ALTER TABLE Products
ADD CONSTRAINT CHK_Price_Positive CHECK (Price > 0);



ALTER TABLE Products
ADD Stock INT NOT NULL DEFAULT 0;



SELECT 
    ProductID,
    ProductName,
    ISNULL(Price, 0) AS Price,
    CategoryID,
    Stock
FROM Products;



–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ FOREIGN KEY –≤ SQL Server

FOREIGN KEY ‚Äî —ç—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–∑–¥–∞—ë—Ç —Å–≤—è–∑—å –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–∞–±–ª–∏—Ü–∞–º–∏.

–û–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–æ—á–µ—Ä–Ω–µ–π —Ç–∞–±–ª–∏—Ü–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Products.CategoryID) –¥–æ–ª–∂–Ω–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Categories.CategoryID).

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç—Å—è —Å—Å—ã–ª–æ—á–Ω–∞—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.

–ü—Ä–∏–º–µ—Ä:

–¢–∞–±–ª–∏—Ü–∞ Categories —Ö—Ä–∞–Ω–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤.

–¢–∞–±–ª–∏—Ü–∞ Products —Ö—Ä–∞–Ω–∏—Ç —Ç–æ–≤–∞—Ä—ã –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–æ–ª–±–µ—Ü CategoryID.

FOREIGN KEY –Ω–µ –ø–æ–∑–≤–æ–ª–∏—Ç –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π.


# SQL Hard level tasks (10)


CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(100) NOT NULL,
    Age INT CHECK (Age >= 18)   -- –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–µ–Ω—å—à–µ 18
);


CREATE TABLE Products (
    ProductID INT IDENTITY(100,10) PRIMARY KEY,
    ProductName VARCHAR(100),
    Price DECIMAL(10,2)
);


CREATE TABLE OrderDetails (
    OrderID INT,
    ProductID INT,
    Quantity INT,
    PRIMARY KEY (OrderID, ProductID)
);


ISNULL(expression, replacement) ‚Üí replaces NULL with the specified replacement. Works with two arguments only.
Example:
SELECT ISNULL(NULL, 'N/A'); -- Returns 'N/A'


COALESCE(expression1, expression2, ..., expressionN) ‚Üí returns the first non-NULL value from a list. Works with multiple arguments.
Example:

SELECT COALESCE(NULL, NULL, 'Value', 'Other'); -- Returns 'Value'


Create an Employees table with PRIMARY KEY on EmpID and UNIQUE KEY on Email
CREATE TABLE Employees (
    EmpID INT PRIMARY KEY,
    FullName VARCHAR(100),
    Email VARCHAR(100) UNIQUE,
    HireDate DATE
);
Create a FOREIGN KEY with ON DELETE CASCADE and ON UPDATE CASCADE

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
If a Customer is deleted ‚Üí their Orders are deleted automatically.

If a CustomerID is updated ‚Üí it cascades to Orders.

